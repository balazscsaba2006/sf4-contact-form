# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
orbs:
    codecov: codecov/codecov@1.0.2
jobs:
    build:
        docker:
            - image: balazscsaba2006/hdapi-ci

        working_directory: ~/project

        steps:
            - checkout

            - run:
                  name: "Install MySQL CLI"
                  command: |
                      sudo apt-get update
                      sudo apt install -y -q mysql-client
                      service mysql start

            - run:
                  name: "Install dockerize"
                  working_directory: ~/tmp
                  command: |
                      wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
                      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
                      rm dockerize-linux-amd64-v0.6.1.tar.gz

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      # "composer.lock" can be used if it is committed to the repo
                      - v1-dependencies-{{ checksum "app/composer.json" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            # Set env vars
            - run: export SYMFONY_ENV=test

            - run:
                  name: "Install project dependencies"
                  working_directory: ~/project/app
                  command: SYMFONY_ENV=test composer install --no-interaction --no-progress --prefer-dist

            - save_cache:
                  key: v1-dependencies-{{ checksum "app/composer.json" }}
                  paths:
                      - ./vendor

            - run:
                  name: "Wait for database to start"
                  command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m

            - run:
                  name: "Install and prepare database"
                  working_directory: ~/project/app
                  command: |
                      bin/console doctrine:database:create -n --env=test
                      bin/console doctrine:migrations:migrate -n --env=test

            # To use server:start we need to install pcntl extension
            - run:
                  name: "Run web server in background"
                  working_directory: ~/project/app
                  command: bin/console server:run
                  background: true

            # Run tests
            - run:
                  name: "Run tests"
                  working_directory: ~/project/app
                  command: |
                      bin/console lint:yaml config
                      bin/console lint:twig templates
                      vendor/bin/php-cs-fixer fix src --diff || (echo "Coding standards are not respected. Run 'vendor/bin/php-cs-fixer fix'" && exit 1);
                      php bin/phpunit -v --configuration phpunit.xml.dist --coverage-clover=coverage.xml --coverage-text --colors=never --stderr

            # Upload coverage report to Codecov
            - codecov/upload:
                  file: coverage.xml
                  token: 95e332a7-56c8-46dc-8804-510a2d3c6aab