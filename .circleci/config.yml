# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
orbs:
    codecov: codecov/codecov@1.0.2
jobs:
    build:
        docker:
            - image: balazscsaba2006/hdapi-ci
            - image: circleci/mysql:8.0.4
                  environment:
                      MYSQL_ROOT_PASSWORD: root
                      MYSQL_DATABASE: test
                      MYSQL_USER: root
                      MYSQL_PASSWORD: root

        working_directory: ~/project

        steps:
            - checkout
            -   run:
                    # Our primary container isn't MYSQL so run a sleep command until it's ready.
                    name: Waiting for MySQL to be ready
                    command: |
                        for i in `seq 1 10`;
                        do
                          nc -z 127.0.0.1 3306 && echo Success && exit 0
                          echo -n .
                          sleep 1
                        done
                        echo Failed waiting for MySQL && exit 1
            -   run:
                    name: Install MySQL CLI
                    command: sudo apt-get install default-mysql-client

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      # "composer.lock" can be used if it is committed to the repo
                      - v1-dependencies-{{ checksum "app/composer.json" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run:
                  working_directory: ~/project/app
                  command: composer install --no-interaction --no-progress --prefer-dist

            - save_cache:
                  key: v1-dependencies-{{ checksum "app/composer.json" }}
                  paths:
                      - ./vendor

            # install database
            - run: mysql -h localhost -u root -proot -e "CREATE DATABASE test;"


            # prepare the database
            - run:
                  working_directory: ~/project/app
                  command: php bin/console doctrine:migrations:migrate -n --env=test

            # run tests with phpunit
            - run:
                  working_directory: ~/project/app
                  command: ./vendor/bin/phpunit -v --configuration phpunit.xml.dist --coverage-clover=coverage.xml --coverage-text --colors=never --stderr

            # upload coverage report to Codecov
            - codecov/upload:
                  file: coverage.xml
                  token: 95e332a7-56c8-46dc-8804-510a2d3c6aab