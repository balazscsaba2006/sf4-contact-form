# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
jobs:
    build:
        docker:
            - image: balazscsaba2006/hdapi-ci

        working_directory: ~/project

        steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      # "composer.lock" can be used if it is committed to the repo
                      - v1-dependencies-{{ checksum "app/composer.json" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            # Set env vars
            - run:
                  name: "Exporting environment variables"
                  command: |
                      export SYMFONY_ENV=test
                      export CODECOV_TOKEN="95e332a7-56c8-46dc-8804-510a2d3c6aab"

            - run:
                  name: "Install project dependencies"
                  working_directory: ~/project/app
                  command: SYMFONY_ENV=test composer install --no-interaction --no-progress --prefer-dist

            - save_cache:
                  key: v1-dependencies-{{ checksum "app/composer.json" }}
                  paths:
                      - ./vendor

            - run:
                  name: "Install and prepare database"
                  working_directory: ~/project/app
                  command: |
                      bin/console doctrine:database:create -n --env=test
                      bin/console doctrine:schema:create -n --env=test

            # Run tests
            - run:
                  name: "Run linters and code style checker"
                  working_directory: ~/project/app
                  command: |
                      bin/console lint:yaml config
                      bin/console lint:twig templates
                      vendor/bin/php-cs-fixer fix src --diff || (echo "Coding standards are not respected. Run 'vendor/bin/php-cs-fixer fix'" && exit 1);

            # Run tests
            - run:
                  name: "Run tests"
                  working_directory: ~/project/app
                  command: |
                      php bin/phpunit -v --configuration phpunit.xml.dist --coverage-clover=coverage.xml --coverage-text --colors=never --stderr
                      if [ $? -eq 0 ]; then bash <(curl -s https://codecov.io/bash); fi