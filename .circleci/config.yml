# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
orbs:
    codecov: codecov/codecov@1.0.2
jobs:
    build:
        docker:
            - image: balazscsaba2006/hdapi-ci

        working_directory: ~/project

        steps:
            - checkout
            # Install MySQL CLI and start service
            - run:
                  name: Install MySQL CLI
                  command: |
                      sudo apt-get update
                      sudo apt install -y -q mysql-client
                      service mysql start

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      # "composer.lock" can be used if it is committed to the repo
                      - v1-dependencies-{{ checksum "app/composer.json" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            # Set env vars
            - run: export SYMFONY_ENV=test

            - run:
                  working_directory: ~/project/app
                  command: SYMFONY_ENV=test composer install --no-interaction --no-progress --prefer-dist

            - save_cache:
                  key: v1-dependencies-{{ checksum "app/composer.json" }}
                  paths:
                      - ./vendor

            # Install database
            - run: mysql -h localhost -u root -proot -e "CREATE DATABASE test;"

            # Prepare the database
            - run:
                  name: "Wait for DB and initialize DB"
                  working_directory: ~/project/app
                  command: |
                      php bin/console db:wait --env=test
                      php bin/console doctrine:migrations:migrate -n --env=test

            # Run tests with phpunit
            - run:
                  working_directory: ~/project/app
                  command: ./vendor/bin/phpunit -v --configuration phpunit.xml.dist --coverage-clover=coverage.xml --coverage-text --colors=never --stderr

            # Upload coverage report to Codecov
            - codecov/upload:
                  file: coverage.xml
                  token: 95e332a7-56c8-46dc-8804-510a2d3c6aab